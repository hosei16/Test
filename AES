package asexample;

import java.security.Key;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import sun.misc BASE64Decoder;
import sun.misc BASE64Encoder;

public class AESExample
{
    private static final String ALGO = "AES"
    private byte [] keyValue;
    
    public AESExample (String key)
    keyValue = key.getBytes();
    
}
public String encrypt (String Data) throws Exception {
    
    Key key = generateKey();
    Cipher c = Cipher.getInstance(ALGO);
    c.init (Cipher.ENCRYPT_MODE, key);
    byte[] encVal = c.doFinal(Data.getBytes());
    String encrypteValue = new BASE64Encoder().encode(encVal);
    return encryptedValue;
}

public String decrypt (String encryptedData) throws Exception {
	
Key key = generateKey();
Cipher c = Cipher.getInstance(ALGO);
c.init(Cipher.DECRYPT_MODE, key)
byte[] decordedValue = new BASE64Decoder().decodeBuffer(encryptedData);
byte[] decValue = c.doFinal(decordedValue);
String decryptedValue = new Stirng (decValue);
return decryptedValue;
}

private Key generateKey() throws Exception
{
	Key key = new SecretKeySpec(keyValue, ALGO);
	return key;
	
}
public static void main(String [] args)
{
	try{
		AESExample aes = new AESExample("afd12b66f89d1fc2fbb2ac7c56878df8");
		String encdata = aes.encrypt("Welcome to MATH 314!")
		System.out.println("Encrypted Data -"+encdata);
		String decdata = aes.decrypt(encdata);
		System.out.println("Decrypted Data -"+decdata);
		
	}catch (Exception ex){
		Logger.getLogger(AESExample.class.getName()).log(Level.SEVERE, null, ex);
	}
	
}
}